SQL> -- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
SQL> --   at:        2021-04-28 15:03:49 AEST
SQL> --   site:      Oracle Database 12c
SQL> --   type:      Oracle Database 12c
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE appointment CASCADE CONSTRAINTS;

Table APPOINTMENT dropped.

SQL> 
SQL> DROP TABLE clinic CASCADE CONSTRAINTS;

Table CLINIC dropped.

SQL> 
SQL> DROP TABLE drug CASCADE CONSTRAINTS;

Table DRUG dropped.

SQL> 
SQL> DROP TABLE ownership CASCADE CONSTRAINTS;

Table OWNERSHIP dropped.

SQL> 
SQL> DROP TABLE pet CASCADE CONSTRAINTS;

Table PET dropped.

SQL> 
SQL> DROP TABLE pettype CASCADE CONSTRAINTS;

Table PETTYPE dropped.

SQL> 
SQL> DROP TABLE prescription CASCADE CONSTRAINTS;

Table PRESCRIPTION dropped.

SQL> 
SQL> DROP TABLE procedure CASCADE CONSTRAINTS;

Table PROCEDURE dropped.

SQL> 
SQL> DROP TABLE service CASCADE CONSTRAINTS;

Table SERVICE dropped.

SQL> 
SQL> DROP TABLE specialisation CASCADE CONSTRAINTS;

Table SPECIALISATION dropped.

SQL> 
SQL> DROP TABLE vet CASCADE CONSTRAINTS;

Table VET dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE appointment (
  2      app_id           NUMBER(4) NOT NULL,
  3      app_paymethod    VARCHAR2(4) NOT NULL,
  4      app_totalamount  NUMBER(6, 2) NOT NULL,
  5      pet_id           NUMBER(3) NOT NULL,
  6      clinic_id        NUMBER(5) NOT NULL,
  7      vet_id           NUMBER(4) NOT NULL,
  8      app_datetime     DATE NOT NULL
  9  );

Table APPOINTMENT created.

SQL> 
SQL> ALTER TABLE appointment
  2      ADD CHECK ( app_paymethod IN ( 'Cash', 'EFT' ) );

Table APPOINTMENT altered.

SQL> 
SQL> COMMENT ON COLUMN appointment.app_id IS
  2      'surrigote key for appointment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN appointment.app_paymethod IS
  2      'Method of payment for appointment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN appointment.app_totalamount IS
  2      'Total cost of appointment including services and prescriptions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN appointment.pet_id IS
  2      'Unique Identifier of Pet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN appointment.clinic_id IS
  2      'Unique identifier for Clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN appointment.vet_id IS
  2      'Unique Identifier of Vetinarian';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN appointment.app_datetime IS
  2      'Date and Time of appointment';

Comment created.

SQL> 
SQL> ALTER TABLE appointment ADD CONSTRAINT appointment_pk PRIMARY KEY ( app_id );

Table APPOINTMENT altered.

SQL> 
SQL> ALTER TABLE appointment ADD CONSTRAINT appointment_nk UNIQUE ( app_datetime,
  2                                                                 vet_id );

Table APPOINTMENT altered.

SQL> 
SQL> CREATE TABLE clinic (
  2      clinic_id       NUMBER(5) NOT NULL,
  3      clinic_name     VARCHAR2(30) NOT NULL,
  4      clinic_phone    NUMBER(10) NOT NULL,
  5      clinic_address  VARCHAR2(50) NOT NULL
  6  );

Table CLINIC created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_id IS
  2      'Unique identifier for Clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_name IS
  2      'Name of Clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_phone IS
  2      'Phone number of clinic';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN clinic.clinic_address IS
  2      'Address of clinic';

Comment created.

SQL> 
SQL> ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

Table CLINIC altered.

SQL> 
SQL> CREATE TABLE drug (
  2      drug_id    NUMBER(3) NOT NULL,
  3      drug_name  VARCHAR2(50) NOT NULL,
  4      drug_cost  NUMBER(4, 2) NOT NULL
  5  );

Table DRUG created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_id IS
  2      'Unique identidier for drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_name IS
  2      'Name of drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drug.drug_cost IS
  2      'Cost of prescribed drugs';

Comment created.

SQL> 
SQL> ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

Table DRUG altered.

SQL> 
SQL> CREATE TABLE ownership (
  2      owner_id       NUMBER(4) NOT NULL,
  3      owner_gname    VARCHAR2(50) NOT NULL,
  4      owner_fname    VARCHAR2(50) NOT NULL,
  5      owner_street   VARCHAR2(50) NOT NULL,
  6      owner_town     VARCHAR2(20) NOT NULL,
  7      owner_poscode  NUMBER(4) NOT NULL,
  8      vet_id         NUMBER(4) NOT NULL
  9  );

Table OWNERSHIP created.

SQL> 
SQL> COMMENT ON COLUMN ownership.owner_id IS
  2      'Unique identifier for owner';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ownership.owner_gname IS
  2      'Owner Given Name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ownership.owner_fname IS
  2      'Owner Family Name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ownership.owner_street IS
  2      'Street of owners residence';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ownership.owner_town IS
  2      'Town of owners residence';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ownership.owner_poscode IS
  2      'Postcode of owners residence';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ownership.vet_id IS
  2      'Unique Identifier of Vetinarian';

Comment created.

SQL> 
SQL> ALTER TABLE ownership ADD CONSTRAINT ownership_pk PRIMARY KEY ( owner_id );

Table OWNERSHIP altered.

SQL> 
SQL> CREATE TABLE pet (
  2      pet_id        NUMBER(3) NOT NULL,
  3      pet_gender    VARCHAR2(6) NOT NULL,
  4      pet_name      VARCHAR2(50) NOT NULL,
  5      pet_dob       DATE NOT NULL,
  6      pet_deceased  CHAR(1) NOT NULL,
  7      owner_id      NUMBER(4) NOT NULL,
  8      pettype_id    NUMBER(5) NOT NULL
  9  );

Table PET created.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CHECK ( pet_gender IN ( 'Female', 'Male' ) );

Table PET altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CHECK ( pet_deceased IN ( 'N', 'Y' ) );

Table PET altered.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_id IS
  2      'Unique Identifier of Pet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_gender IS
  2      'Gender of pet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_name IS
  2      ' Name of Pet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_dob IS
  2      'The Pet''s date of birth';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pet_deceased IS
  2      'Whether pet is deceased (Y if it is, N if it''s not)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.owner_id IS
  2      'Unique identifier for owner';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pet.pettype_id IS
  2      'Uniquue identifier for pettype';

Comment created.

SQL> 
SQL> ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

Table PET altered.

SQL> 
SQL> CREATE TABLE pettype (
  2      pettype_id    NUMBER(5) NOT NULL,
  3      pettype_name  VARCHAR2(20) NOT NULL
  4  );

Table PETTYPE created.

SQL> 
SQL> COMMENT ON COLUMN pettype.pettype_id IS
  2      'Uniquue identifier for pettype';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN pettype.pettype_name IS
  2      'Name fo pettype';

Comment created.

SQL> 
SQL> ALTER TABLE pettype ADD CONSTRAINT pettype_pk PRIMARY KEY ( pettype_id );

Table PETTYPE altered.

SQL> 
SQL> CREATE TABLE prescription (
  2      app_id     NUMBER(4) NOT NULL,
  3      drug_id    NUMBER(3) NOT NULL,
  4      drug_qty   NUMBER(3) NOT NULL,
  5      pres_cost  NUMBER(10, 2) NOT NULL,
  6      pres_dose  NUMBER(5) NOT NULL,
  7      pres_freq  VARCHAR2(20)
  8  );

Table PRESCRIPTION created.

SQL> 
SQL> COMMENT ON COLUMN prescription.app_id IS
  2      'surrigote key for appointment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.drug_id IS
  2      'Unique identidier for drug';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.drug_qty IS
  2      'Quantity of drug in prescription';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.pres_cost IS
  2      'Cost of prescription';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.pres_dose IS
  2      'Dose of drugs for prescription';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN prescription.pres_freq IS
  2      'Frequency of drug use in prescription';

Comment created.

SQL> 
SQL> ALTER TABLE prescription ADD CONSTRAINT prescription_pk PRIMARY KEY ( app_id,
  2                                                                        drug_id );

Table PRESCRIPTION altered.

SQL> 
SQL> CREATE TABLE procedure (
  2      app_id        NUMBER(4) NOT NULL,
  3      service_code  CHAR(5) NOT NULL
  4  );

Table PROCEDURE created.

SQL> 
SQL> COMMENT ON COLUMN procedure.app_id IS
  2      'surrigote key for appointment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN procedure.service_code IS
  2      'Unique identifier for service';

Comment created.

SQL> 
SQL> ALTER TABLE procedure ADD CONSTRAINT procedure_pk PRIMARY KEY ( app_id,
  2                                                                  service_code );

Table PROCEDURE altered.

SQL> 
SQL> CREATE TABLE service (
  2      service_code         CHAR(5) NOT NULL,
  3      service_description  VARCHAR2(300) NOT NULL,
  4      service_cost         NUMBER(4, 2) NOT NULL
  5  );

Table SERVICE created.

SQL> 
SQL> COMMENT ON COLUMN service.service_code IS
  2      'Unique identifier for service';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service.service_description IS
  2      'Short description of service';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN service.service_cost IS
  2      'Cost of service';

Comment created.

SQL> 
SQL> ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_code );

Table SERVICE altered.

SQL> 
SQL> CREATE TABLE specialisation (
  2      spec_id    NUMBER(4) NOT NULL,
  3      spec_name  VARCHAR2(20) NOT NULL
  4  );

Table SPECIALISATION created.

SQL> 
SQL> COMMENT ON COLUMN specialisation.spec_id IS
  2      'Unique Identifier for specialisation';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN specialisation.spec_name IS
  2      'Name of Specialisation';

Comment created.

SQL> 
SQL> ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( spec_id );

Table SPECIALISATION altered.

SQL> 
SQL> CREATE TABLE vet (
  2      vet_id         NUMBER(4) NOT NULL,
  3      vet_name       VARCHAR2(50) NOT NULL,
  4      vet_phone      NUMBER(10) NOT NULL,
  5      vet_startdate  DATE NOT NULL,
  6      vet_gname      VARCHAR2(20) NOT NULL,
  7      vet_fname      VARCHAR2(20) NOT NULL,
  8      spec_id        NUMBER(4) NOT NULL,
  9      clinic_id      NUMBER(5) NOT NULL
 10  );

Table VET created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_id IS
  2      'Unique Identifier of Vetinarian';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_name IS
  2      'Vetinarian Name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_phone IS
  2      'Phone number of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_startdate IS
  2      'Starting date for vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_gname IS
  2      'Given name of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.vet_fname IS
  2      'Family name of vet';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.spec_id IS
  2      'Unique Identifier for specialisation';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN vet.clinic_id IS
  2      'Unique identifier for Clinic';

Comment created.

SQL> 
SQL> ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

Table VET altered.

SQL> 
SQL> ALTER TABLE appointment
  2      ADD CONSTRAINT appointment_pet FOREIGN KEY ( pet_id )
  3          REFERENCES pet ( pet_id );

Table APPOINTMENT altered.

SQL> 
SQL> ALTER TABLE prescription
  2      ADD CONSTRAINT appointment_prescription FOREIGN KEY ( app_id )
  3          REFERENCES appointment ( app_id );

Table PRESCRIPTION altered.

SQL> 
SQL> ALTER TABLE procedure
  2      ADD CONSTRAINT appointment_procedure FOREIGN KEY ( app_id )
  3          REFERENCES appointment ( app_id );

Table PROCEDURE altered.

SQL> 
SQL> ALTER TABLE appointment
  2      ADD CONSTRAINT clinic_appointment FOREIGN KEY ( clinic_id )
  3          REFERENCES clinic ( clinic_id );

Table APPOINTMENT altered.

SQL> 
SQL> ALTER TABLE vet
  2      ADD CONSTRAINT clinic_vet FOREIGN KEY ( clinic_id )
  3          REFERENCES clinic ( clinic_id );

Table VET altered.

SQL> 
SQL> ALTER TABLE prescription
  2      ADD CONSTRAINT drug_prescription FOREIGN KEY ( drug_id )
  3          REFERENCES drug ( drug_id );

Table PRESCRIPTION altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT ownership_pet FOREIGN KEY ( owner_id )
  3          REFERENCES ownership ( owner_id );

Table PET altered.

SQL> 
SQL> ALTER TABLE pet
  2      ADD CONSTRAINT pettype_pet FOREIGN KEY ( pettype_id )
  3          REFERENCES pettype ( pettype_id );

Table PET altered.

SQL> 
SQL> ALTER TABLE procedure
  2      ADD CONSTRAINT service_procedure FOREIGN KEY ( service_code )
  3          REFERENCES service ( service_code );

Table PROCEDURE altered.

SQL> 
SQL> ALTER TABLE vet
  2      ADD CONSTRAINT specialisation_vet FOREIGN KEY ( spec_id )
  3          REFERENCES specialisation ( spec_id );

Table VET altered.

SQL> 
SQL> ALTER TABLE appointment
  2      ADD CONSTRAINT vet_appointment FOREIGN KEY ( vet_id )
  3          REFERENCES vet ( vet_id );

Table APPOINTMENT altered.

SQL> 
SQL> ALTER TABLE ownership
  2      ADD CONSTRAINT vet_ownership FOREIGN KEY ( vet_id )
  3          REFERENCES vet ( vet_id );

Table OWNERSHIP altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            11
SQL> -- CREATE INDEX                             0
SQL> -- ALTER TABLE                             27
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> 
SQL> 
SQL> SPOOL off
